import { NextResponse } from "next/server"
import { getDatabase } from "@/lib/mongodb"
import type { Employee, Task, Project } from "@/lib/models"

const seedEmployees: Omit<Employee, "_id">[] = [
  {
    id: "emp-1",
    name: "Sarah Johnson",
    role: "Senior Frontend Developer",
    department: "Engineering",
    email: "sarah.johnson@company.com",
    avatar: "/placeholder.svg?height=40&width=40",
    status: "available",
    skills: ["React", "TypeScript", "CSS", "JavaScript", "Next.js", "Tailwind"],
    performanceScore: 92,
    currentWorkload: 65,
    activeTasks: 4,
    completedTasks: 127,
    rating: 4.8,
    avgTaskTime: 6.2,
    joinDate: "2022-03-15",
    lastActive: "2024-01-15T10:30:00Z",
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "emp-2",
    name: "Michael Chen",
    role: "Backend Developer",
    department: "Engineering",
    email: "michael.chen@company.com",
    avatar: "/placeholder.svg?height=40&width=40",
    status: "available",
    skills: ["Node.js", "Python", "PostgreSQL", "Docker", "AWS", "GraphQL", "Authentication", "JWT"],
    performanceScore: 88,
    currentWorkload: 45,
    activeTasks: 3,
    completedTasks: 98,
    rating: 4.6,
    avgTaskTime: 8.1,
    joinDate: "2021-11-20",
    lastActive: "2024-01-15T09:15:00Z",
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "emp-3",
    name: "Emily Rodriguez",
    role: "UX Designer",
    department: "Design",
    email: "emily.rodriguez@company.com",
    avatar: "/placeholder.svg?height=40&width=40",
    status: "busy",
    skills: ["Figma", "Adobe XD", "User Research", "Prototyping", "Design Systems", "UI Design", "Wireframing"],
    performanceScore: 95,
    currentWorkload: 85,
    activeTasks: 6,
    completedTasks: 156,
    rating: 4.9,
    avgTaskTime: 4.8,
    joinDate: "2020-08-10",
    lastActive: "2024-01-15T11:45:00Z",
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "emp-4",
    name: "David Kim",
    role: "DevOps Engineer",
    department: "Engineering",
    email: "david.kim@company.com",
    avatar: "/placeholder.svg?height=40&width=40",
    status: "available",
    skills: ["Kubernetes", "Docker", "AWS", "Terraform", "Jenkins", "Monitoring", "CI/CD", "DevOps"],
    performanceScore: 90,
    currentWorkload: 55,
    activeTasks: 3,
    completedTasks: 89,
    rating: 4.7,
    avgTaskTime: 7.3,
    joinDate: "2022-01-05",
    lastActive: "2024-01-15T08:20:00Z",
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "emp-5",
    name: "Lisa Thompson",
    role: "Product Manager",
    department: "Product",
    email: "lisa.thompson@company.com",
    avatar: "/placeholder.svg?height=40&width=40",
    status: "available",
    skills: ["Product Strategy", "Analytics", "Agile", "User Stories", "Roadmapping", "Project Management"],
    performanceScore: 87,
    currentWorkload: 70,
    activeTasks: 5,
    completedTasks: 203,
    rating: 4.5,
    avgTaskTime: 3.2,
    joinDate: "2019-06-12",
    lastActive: "2024-01-15T12:10:00Z",
    createdAt: new Date(),
    updatedAt: new Date(),
  },
]

const seedProjects: Omit<Project, "_id">[] = [
  {
    id: "proj-1",
    name: "TaskFlow ERP System",
    description: "Complete ERP system for task allocation and workforce management",
    status: "active",
    priority: "high",
    startDate: "2024-01-01",
    endDate: "2024-03-31",
    progress: 65,
    teamSize: 8,
    budget: 150000,
    manager: "emp-5",
    department: "Engineering",
    teamKey: "engineering",
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "proj-2",
    name: "Mobile App Development",
    description: "Cross-platform mobile application for field workers",
    status: "active",
    priority: "medium",
    startDate: "2024-01-15",
    endDate: "2024-04-30",
    progress: 30,
    teamSize: 5,
    budget: 80000,
    manager: "emp-5",
    department: "Design",
    teamKey: "design",
    createdAt: new Date(),
    updatedAt: new Date(),
  },
  {
    id: "proj-3",
    name: "Legacy System Migration",
    description: "Migrate data and processes from legacy systems",
    status: "completed",
    priority: "high",
    startDate: "2023-10-01",
    endDate: "2024-01-15",
    progress: 100,
    teamSize: 6,
    budget: 120000,
    manager: "emp-5",
    department: "Engineering",
    teamKey: "engineering",
    createdAt: new Date(),
    updatedAt: new Date(),
  },
]

const seedTasks: Omit<Task, "_id">[] = [
  {
    id: "task-1",
    title: "Implement User Authentication",
    description: "Build secure login/logout functionality with JWT tokens",
    status: "in-progress",
    priority: "high",
    assignedTo: "emp-2",
    projectId: "proj-1",
    createdAt: "2024-01-10T09:00:00Z",
    updatedAt: "2024-01-14T16:30:00Z",
    dueDate: "2024-01-20T23:59:59Z",
    estimatedHours: 16,
    requiredSkills: ["Authentication", "JWT", "Node.js", "Security"],
  },
  {
    id: "task-2",
    title: "Database Schema Design",
    description: "Design and implement the core database schema for user management",
    status: "completed",
    priority: "high",
    assignedTo: "emp-2",
    projectId: "proj-1",
    createdAt: "2024-01-08T10:00:00Z",
    updatedAt: "2024-01-12T14:20:00Z",
    dueDate: "2024-01-15T23:59:59Z",
    estimatedHours: 12,
    requiredSkills: ["PostgreSQL", "Database Design", "SQL"],
    completedAt: "2024-01-12T14:20:00Z",
    autoDeleteAt: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: "task-3",
    title: "Mobile App Wireframes",
    description: "Create wireframes for the mobile application user interface",
    status: "in-progress",
    priority: "medium",
    assignedTo: "emp-3",
    projectId: "proj-2",
    createdAt: "2024-01-12T11:00:00Z",
    updatedAt: "2024-01-15T09:45:00Z",
    dueDate: "2024-01-25T23:59:59Z",
    estimatedHours: 20,
    requiredSkills: ["Figma", "UX Design", "Mobile Design", "Wireframing"],
  },
  {
    id: "task-4",
    title: "CI/CD Pipeline Setup",
    description: "Configure automated deployment pipeline for the application",
    status: "pending",
    priority: "high",
    projectId: "proj-1",
    createdAt: "2024-01-13T08:00:00Z",
    updatedAt: "2024-01-13T08:00:00Z",
    dueDate: "2024-01-22T23:59:59Z",
    estimatedHours: 14,
    requiredSkills: ["Docker", "Kubernetes", "AWS", "Jenkins", "DevOps", "CI/CD"],
  },
]

export async function GET() {
  try {
    const db = await getDatabase()

    // Clear existing data
    await db.collection("employees").deleteMany({})
    await db.collection("projects").deleteMany({})
    await db.collection("tasks").deleteMany({})

    // Insert seed data
    await db.collection<Employee>("employees").insertMany(seedEmployees)
    await db.collection<Project>("projects").insertMany(seedProjects)
    await db.collection<Task>("tasks").insertMany(seedTasks)

    return NextResponse.json({
      message: "Database seeded successfully",
      data: {
        employees: seedEmployees.length,
        projects: seedProjects.length,
        tasks: seedTasks.length,
      },
    })
  } catch (error) {
    console.error("Error seeding database:", error)
    return NextResponse.json({ error: "Failed to seed database" }, { status: 500 })
  }
}
